{"version":3,"sources":["../pixels.ts","../constants.ts","../canvas.ts","webpack/bootstrap","webpack/runtime/define property getters","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","script.ts"],"names":[],"mappings":"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","file":"parsed-script.js","sourcesContent":["import { EMPTY_PIXEL, PIXEL_SIZE, } from \"./constants\";\nimport { minMax } from './utils';\nimport { ChunksOfPixel, Offset, Size } from \"./types\";\n\nexport function getPixelColor(pixels:Uint8ClampedArray,  position: number): number[] {\n    const color: number[] = [];\n    for (let j=0; j<PIXEL_SIZE; j++) {\n        color.push(pixels[position+j]);\n    }\n    return color;\n}\n\nexport function getChunksOfPixelColor(pixels:Uint8ClampedArray,  position: number, chunks: Offset, size: Size): ChunksOfPixel {\n    const colors: number[] = [];\n    const yMax = Math.min(chunks.y);\n    const rendered = {...chunks};\n    const index = position / PIXEL_SIZE;\n    for (let y = 0; y < yMax; y++) {\n\n        const yPosition = y * size.width * PIXEL_SIZE;\n        let xMax = (position + (chunks.x * PIXEL_SIZE));\n\n        const xMaxIndex = xMax /4;\n        const sxMax = Math.floor(xMaxIndex/ size.width);\n        const sxMaxWidth = sxMax * size.width;\n        const xWidth = Math.floor(index/size.width);\n        const xMaxWidth = xWidth * size.width;\n        // const safeWidth = ;\n        console.log('index:', index, xMaxIndex, xMax, size.width, 'w', xMaxWidth,  sxMaxWidth);\n\n        if (sxMaxWidth !== xMaxWidth && xMaxIndex > sxMaxWidth) {\n            rendered.x = chunks.x - (xMaxIndex - sxMaxWidth) ;\n            xMax = position + (rendered.x * PIXEL_SIZE);\n\n            \n\n        }\n\n        for (let x = position; x < xMax; x++) {\n            const pixel = yPosition+x;\n            colors.push(pixels[pixel]);\n        }\n    }\n\n\n    return {...rendered,  colors} as ChunksOfPixel;\n}\n\n\nexport function isEmptyPixel(array: number[]): boolean {\n    for (let i =0; i < EMPTY_PIXEL.length; i++) {\n        if (EMPTY_PIXEL[i] !== array[i]) {\n            return false;\n        }\n    }\n    return true;\n}","export const FONT_SIZE = 200;\nexport const EMPTY_PIXEL = [0, 0, 0, 0];\nexport const PIXEL_SIZE = 4;\n","import { FONT_SIZE } from \"./constants\";\n\nexport function initCanvas(height?: number, width?: number) {\n    const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n    canvas.height = (height || window.innerHeight/2);\n    canvas.width = (width || window.innerWidth);\n    const ctx = canvas.getContext('2d');\n    const h = canvas.height;\n    const w = canvas.width;\n    const ww = w/2;\n    const hh = h/2;\n    \n    return { canvas, ctx, h, w, hh, ww };\n}\n\nexport function drawText(ctx: CanvasRenderingContext2D, text: string, x = 0, y =0) {\n    ctx.font = `900 ${FONT_SIZE}px Arial`;\n    ctx.textBaseline = 'middle'; \n    ctx.textAlign = 'center';\n    ctx.fillText(text, x, y);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { getChunksOfPixelColor, getPixelColor, isEmptyPixel } from \"../pixels\";\nimport { drawText, initCanvas } from \"../canvas\";\nimport { Offset, Size } from \"../types\";\nimport { PIXEL_SIZE } from \"../constants\";\n\n\n\n(function name() {\n    const { ctx, h, w } = initCanvas();\n    const string = \"Hamza Iqbal\";\n    drawText(ctx, string);\n\n    const size: Size = {width: 80, height: 60};\n\n    var image = ctx.getImageData(0, 0, size.width, size.height);\n    var pixels = image.data;\n    const limit = size.width*size.height*PIXEL_SIZE; \n    const oo = 200;\n    let count = 0;\n    const chunks: Offset = {x:9, y:4}; \n    \n    function loop() {\n        const pixelChunks = getChunksOfPixelColor(pixels, count, chunks, size);\n        const p = count/4;\n        const y = Math.floor(p/size.width);\n        const x = p - (y*size.width);\n\n\n        const imageData = new ImageData(Uint8ClampedArray.from(pixelChunks.colors), pixelChunks.x, pixelChunks.y);\n        ctx.putImageData(imageData, oo+x,oo+y)\n        if (count >= limit) {\n            return;\n        }\n        count += PIXEL_SIZE * pixelChunks.x;\n        const yIndex = Math.floor((count/PIXEL_SIZE)/size.width);\n        \n        if (count == yIndex*size.width*PIXEL_SIZE) {\n            count += size.width * PIXEL_SIZE * (chunks.y-1);\n        }\n\n        // while(true) {\n        //     if (isEmptyPixel(getPixelColor(pixels, count))) {\n        //         count += PIXEL_SIZE;\n        //     } else {\n        //         break;\n        //     }\n        // }\n        requestAnimationFrame(loop);\n    }\n\n    loop();\n})();\n"],"sourceRoot":""}